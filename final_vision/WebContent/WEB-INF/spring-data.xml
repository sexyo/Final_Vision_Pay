<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context" 
	   xmlns:mvc="http://www.springframework.org/schema/mvc" 
	   xsi:schemaLocation="http://www.springframework.org/schema/beans 
						   http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
						   http://www.springframework.org/schema/mvc
						   http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
						   http://www.springframework.org/schema/context
						   http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	<bean id="data-source" class="com.p6spy.engine.spy.P6DataSource">
		<constructor-arg ref="data-source-target" />
	</bean>
	<bean id="data-source-target" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>oracle.jdbc.driver.OracleDriver</value>
		</property>
		<property name="url">
			<value>jdbc:oracle:thin:@192.168.0.9:1521:orcl11</value>
		</property>
		<property name="username">
			<value>vision</value>
		</property>
		<property name="password">
			<value>tiger</value>
		</property>
	</bean>
	<bean id="accountDao" class="com.account.AccountDao">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"/>
	</bean>
	<bean id="cardDao" class="com.card.CardDao">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"/>
	</bean>
	<bean id="memberDao" class="com.member.MemberDao">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"/>
	</bean>
	<bean id="rewardsDao" class="com.rewards.RewardsDao">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"/>
	</bean>
	<bean id="recommendDao" class="com.recommend.RecommendDao">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"/>
	</bean>
	<bean id="membershipDao" class="com.membership.MembershipDao">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"/>
	</bean>
	<bean id="planDao" class="com.plan.PlanDao">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"/>
	</bean>
	<!-- 
	myBatis는 자바가 아니므로 클래스를 통해서 객체 주입을 받을 수가 없다.
	따라서 xml문서를 활용하여 필요한 객체를 주입받고 주입하고 해야함.
	xml문서에 등록된 클래스끼리는 생성자 객체 주입법으로 처리하면 되지만
	스프링과 연계되는 부분을 setter객체 주입법을 활용하면 됨.
	myBatis진영에서는 이 경우를 위해 별도의 jar파일을 제공해줌.
	mybatis-spring-1.2.XXX.jar
	 -->
	<!-- 물리적으로 떨어져 있는 DB서버와 커넥션을 맺는데 필요한 정보를 로딩(Connection생성)하기 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="WEB-INF/mybatis-config.xml"/>
		<property name="dataSource" ref="data-source-target"/>
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean>
</beans>




